/* Mobile */
@media
only screen and (-webkit-min-device-pixel-ratio: 2)      and (min-width: 320px),
only screen and (   min--moz-device-pixel-ratio: 2)      and (min-width: 320px),
only screen and (     -o-min-device-pixel-ratio: 2/1)    and (min-width: 320px),
only screen and (        min-device-pixel-ratio: 2)      and (min-width: 320px),
only screen and (                min-resolution: 192dpi) and (min-width: 320px),
only screen and (                min-resolution: 2dppx)  and (min-width: 320px) { 
	#controler{
		display: flex !important;
	}

	#controler > div{
		flex: 1;
		height: 100%;
		align-content: center;
	}
}


#gameContainer{
	display: flex;
	left: 50%;
	translate: -50%;
	position: relative;
	width: 100%;
	justify-content: space-around;
}

.game{
	width: 50vw;
	height: 37.5vw;
	border: var(--main-text-rgb) 5px solid;
}

.playerInfoContainer{
	display: flex;
	flex-direction: column;
	gap: 5rem;
	width: fit-content;
	color: var(--main-text-rgb);
}

.playerPfp, #winPfpContainer{
	flex: none;
	position: relative;
	left: 50%;
	translate: -50%;
	height: 7vw;
	width: 7vw;
	overflow: hidden;
	border-radius: 50%;
}

#winPfpContainer{
	height: 10vw;
	width: 10vw;
	left: 0;
	top: 0;
	translate: 0 0;
}

#winPfpContainer img{
	animation: rotatePfp 1s ease-in;
}

@keyframes rotatePfp {
	0%{
		rotate: 0deg;
	}
	5%{
		rotate: -10deg;
	}
	80%{
		rotate: 380deg;
	}
	100%{
		rotate: 360deg;
	}
}

.playerPfp img, #winPfpContainer img{
	width: 100%;
	background-repeat: no-repeat;
	background-size: 100%;
	background-position: 50% 50%;
	position: absolute;
	left: 50%;
	top: 50%;
	translate: -50% -50%;
}

.playerName{
	margin: 0;
	display: block;
	text-align: center;
}

#winContainer, #waitContainer, #countdownContainer{
	position: absolute;
	top: 0;
	width: 100%;
	height: 100%;
}

#winBlur, #waitBlur, #countdownBlur{
	position: absolute;
	top: 0;
	left: 0;
	width: 100vw;
	height: 100vh;
	background: black;
	opacity: .7;
	display: block;
	z-index: 10;
}

#winBg{
    width: 50%;
    height: 70%;
    position: relative;
    left: 50%;
    top: 50%;
    translate: -50% -50%;
    background: var(--hover-text-rgb);
	z-index: 11;
	align-content: center;
	border-radius: 1rem;
}

#winBg > div{
	display: flex;
	flex-direction: column;
	gap: 1rem;
	align-items: center;
}

#wait {
	position: absolute;
	z-index: 11;

	color: var(--main-text-rgb);
	width: 100%;
	font-size: 2rem;

	top:50%;
	translate: 0 -50%;
	text-align: center;
	animation: waitAnim 5s infinite;
}

@keyframes waitAnim {
	0%{
		color: var(--main-text-rgb);
	}
	50%{
		color: var(--hover-text-rgb);
	}
	0%{
		color: var(--main-text-rgb);
	}
}


@media screen and (orientation:portrait){
	#gameContainer{
		flex-direction: column;
		align-items: center;
		gap: 7rem;
	}

	.playerInfoContainer{
		width: fit-content;
		flex-direction: row;
		align-items: center;
		gap: 4rem;
	}

	.game{
		rotate: 90deg;
	}

	.playerPfp{
		left: 0;
		translate: 0;

	}

	.playerName, .playerScore{
		flex: auto;
		height: fit-content;
		margin: 0;
	}
	
}

#countdownText{
	z-index: 11;
	color: var(--main-text-rgb);
	width: fit-content;
	position: absolute;
	left: 50%;
	top: 50%;
	translate: -50% -100%;
	font-size: 4rem;
}


#tournamentContainer{
	display: none;
	height: 100%;
	color: var(--main-text-rgb);
}

.unused {
	flex: none !important;
	display: none !important;
}

.round, .tournament.result{
	height: 100%;
	flex: 1;
	
    display: flex;
    flex-flow: column;
    justify-content: space-around;
    align-items: center;
}

.quarter.match, .semi.match, .final.match{
	background-color: var(--hover-text-rgb);
	display: flex;
	flex-direction: column;
	gap: 1ch;
}

.contestMatchResume{
	width: fit-content;
	padding: 1ch;
}

.contestUserContainer{
	display: flex;
	width: fit-content;
	align-items: center;
	gap: 1ch;
}
.contestUserContainer .username{
	text-align: left;
	min-width: 15ch;
}

.contestUserContainer.loser .username{
	text-decoration: line-through;
	opacity: .7;
}

.username.waiting{
	font-style: italic;	
}

.contestMatchResume {
	position: relative;
}

.exit.anchor, .entry.anchor{
	flex: none;
}

#treeCanva{
	position: inherit;
	z-index: -1;
	top: 0;
}

#tournamentContainer{
	position: fixed;
	width: 100vw;
	height: calc(100% - 10rem);
}

#tournament{
	display: flex;
	width: inherit;
}

.singleRoundDisplay{
	overflow: hidden;
	left: 0;
}

.singleRoundDisplay#tournamentContainer{
	width: fit-content;
	height: calc(100% - 20rem);
}

.singleRoundDisplay .round{
	flex: none;
	width: 100vw;
}

.anchor{
	position: absolute;
	left: 50%;
}

#controler{
	display: none;
	height: 10rem;
	position: fixed;
	left: 0;
	bottom: 0;
	background: var(--hover-text-rgb);
	width: 100vw;
	align-items: center;
	justify-content: space-around;
}

.singleRoundDisplay#controler{
	display: flex;
}

#controler #leftBtn, #controler #rightBtn{
	background:var(--main-text-rgb);
	height:5rem;
	width:5rem;
	mask-size:contain;
	mask-position:center;
	mask-repeat:no-repeat;
}

#controler #leftBtn{
	mask-image:url("../icons/left_arrow.svg");
}

#controler #rightBtn{
	mask-image:url("../icons/right_arrow.svg");
	right: 0;
}

#controler > div{
	outline: none;
}

#controler #leftBtnContainer:focus #leftBtn, #controler #rightBtnContainer:focus #rightBtn, #controler #leftBtnContainer:hover #leftBtn, #controler #rightBtnContainer:hover #rightBtn{
	background: var(--page-bg-rgb);
}

#lobby{
	width: 100vw;
	flex-wrap: wrap;
	gap: 1ch;
}

.lobbyPlayerContainer{
	height: fit-content;
	flex: 1 0 21%;
}

.lobbyPlayer{
	background: var(--hover-text-rgb);
	display: flex;
	flex-direction: column;
	gap: 1ch;
	width: 10rem;
	padding: 1ch;
	position: relative;
	left: 50%;
	translate: -50%;
	border-radius: 1rem;
}

.lobbyPlayerPfpContainer{
	width: 10rem;
	height: 10rem;
	align-self: center;
	background-position: center center;
	background-repeat: no-repeat;
	overflow: hidden;
	position: relative;
	border-radius: 1rem;
}

.lobbyPlayerPfp{
	width: 100%;
	position: absolute;
	left: 50%;
	top: 50%;
	transform: translate(-50%, -50%);
}


#winContainer button{
	font-size: 3rem !important;
}

#tournamentContainer.selectable a:focus, #tournamentContainer.selectable a:hover{
	opacity: 1;
	text-decoration: underline;
}